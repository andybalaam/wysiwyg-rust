name: Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "main" ]
    types: [ labeled, synchronize, opened, reopened ]

# Enrich gradle.properties for CI/CD
env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx3072m -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError" -Dkotlin.daemon.jvm.options="-Xmx2560m" -Dkotlin.incremental=false
  CI_GRADLE_ARG_PROPERTIES: --stacktrace -PpreDexEnable=false --max-workers 4 --no-daemon

jobs:
  tests:
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Android'))
    name: Runs all tests
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [32]
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install targets
        run: |
          rustup target add aarch64-apple-ios
          rustup target add aarch64-apple-ios-sim
          rustup target add x86_64-apple-ios

      - name: Install Uniffi
        uses: actions-rs/cargo@v1
        with:
          command: install
          # keep in sync with uniffi dependency in Cargo.toml's
          args: uniffi_bindgen --version 0.19.2

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build and run all the tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          profile: Nexus 5X
          target: playstore
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            platforms/android/gradlew :library:connectedDebugAndroidTest
