import com.vanniktech.maven.publish.AndroidSingleVariantLibrary

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'

    alias libs.plugins.jacoco.android
}

if (project.hasProperty("coverage")) {
    apply plugin: 'jacoco'
}

apply plugin: "com.vanniktech.maven.publish.base"

mavenPublishing {
    pomFromGradleProperties()

    def publishJavaDoc = false // https://github.com/Kotlin/dokka/issues/2956
    def publishSources = true
    configure(new AndroidSingleVariantLibrary("release", publishSources, publishJavaDoc))
}

android {
    namespace 'io.element.android.wysiwyg.compose'
    testNamespace 'io.element.android.wysiwyg.compose.test'

    compileSdk 33

    defaultConfig {
        minSdk 23

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    testCoverage {
        jacocoVersion = "0.8.8"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packagingOptions {
        resources.excludes += 'META-INF/LICENSE.md'
        resources.excludes += 'META-INF/LICENSE-notice.md'
    }
}

dependencies {
    implementation project(":library")

    implementation libs.timber

    implementation libs.androidx.core
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    debugImplementation "androidx.compose.ui:ui-tooling"

    testImplementation libs.test.junit
    testImplementation libs.test.mockk
    androidTestImplementation libs.test.androidx.junit
    androidTestImplementation libs.test.androidx.espresso
    androidTestImplementation libs.test.mockk.android
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-test-manifest")

}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}
