// Copyright 2022 The Matrix.org Foundation C.I.C.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

namespace wysiwyg_composer {
    ComposerModel new_composer_model();
};

interface ComposerModel {
    ComposerUpdate replace_all_html(string html);
    ComposerUpdate select(u32 start_utf16_codeunit, u32 end_utf16_codeunit);
    ComposerUpdate replace_text(string new_text);
    ComposerUpdate replace_text_in(string new_text, u32 start, u32 end);
    ComposerUpdate backspace();
    ComposerUpdate delete();
    ComposerUpdate delete_in(u32 start, u32 end);
    ComposerUpdate enter();
    ComposerUpdate format(InlineFormatType type);
    ComposerUpdate ordered_list();
    ComposerUpdate unordered_list();
    ComposerUpdate undo();
    ComposerUpdate redo();
    ComposerUpdate set_link(string new_text);
    string to_tree();
    ComposerState dump_state();
};

interface ComposerUpdate {
    TextUpdate text_update();
    MenuState menu_state();
};

dictionary ComposerState {
    sequence<u16> html;
    u32 start;
    u32 end;
};

[Enum]
interface TextUpdate {
    Keep();
    ReplaceAll(
        sequence<u16> replacement_html,
        u32 start_utf16_codeunit,
        u32 end_utf16_codeunit
    );
};

[Enum]
interface ComposerAction {
    Bold();
    Italic();
    StrikeThrough();
    Underline();
    InlineCode();
    Link();
    Undo();
    Redo();
    OrderedList();
    UnorderedList();
};

[Enum]
interface MenuState {
    Keep();
    Update(
        sequence<ComposerAction> reversed_actions,
        sequence<ComposerAction> disabled_actions
    );
};

[Enum]
interface InlineFormatType {
    Bold();
    Italic();
    StrikeThrough();
    Underline();
    InlineCode();
};
